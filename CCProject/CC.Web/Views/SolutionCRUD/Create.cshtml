@model CC.Domain.Entities.Solution

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

@using (Html.BeginForm()) {
    @Html.ValidationSummary(true)
    <fieldset>
        <legend>Solution</legend>

        <div class="editor-label">
            @Html.LabelFor(model => model.FileName)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.FileName)
            @Html.ValidationMessageFor(model => model.FileName)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.SubmissionTime)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.SubmissionTime)
            @Html.ValidationMessageFor(model => model.SubmissionTime)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.JudgeTime)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.JudgeTime)
            @Html.ValidationMessageFor(model => model.JudgeTime)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Result)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Result)
            @Html.ValidationMessageFor(model => model.Result)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ResultDescription)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ResultDescription)
            @Html.ValidationMessageFor(model => model.ResultDescription)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.SourceCode)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.SourceCode)
            @Html.ValidationMessageFor(model => model.SourceCode)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.GeneratedInput)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.GeneratedInput)
            @Html.ValidationMessageFor(model => model.GeneratedInput)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.TeamInCompetitionId)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.TeamInCompetitionId)
            @Html.ValidationMessageFor(model => model.TeamInCompetitionId)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ProblemId, "Problem")
        </div>
        <div class="editor-field">
            @Html.DropDownList("ProblemId", String.Empty)
            @Html.ValidationMessageFor(model => model.ProblemId)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.TeamId, "Team")
        </div>
        <div class="editor-field">
            @Html.DropDownList("TeamId", String.Empty)
            @Html.ValidationMessageFor(model => model.TeamId)
        </div>

        <p>
            <input type="submit" value="Create" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
